# Use the official Python image as the base image
FROM python:3.11.1-slim-buster

# Set environment variables to non-interactive mode and for Python output
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV PYTHONIOENCODING=UTF-8
ENV POSTGRES_USER=root
ENV POSTGRES_PASSWORD=root
ENV POSTGRES_DB=test_db

# Set working directory inside the container
WORKDIR /app

# Copy all application files into the container
COPY . .

# Install PostgreSQL and other necessary utilities
RUN apt-get update && \
    apt-get install -y postgresql postgresql-contrib && \
    rm -rf /var/lib/apt/lists/*

# Initialize the database and adjust PostgreSQL configuration
# Note: These commands assume PostgreSQL setup commands and may need to be adjusted for actual use.
RUN service postgresql start && \
    su - postgres -c "psql -c \"CREATE USER $POSTGRES_USER WITH SUPERUSER PASSWORD '$POSTGRES_PASSWORD';\"" && \
    su - postgres -c "psql -c \"CREATE DATABASE $POSTGRES_DB OWNER $POSTGRES_USER;\"" && \
    echo "host all all 0.0.0.0/0 md5" >> /etc/postgresql/12/main/pg_hba.conf && \
    echo "listen_addresses='*'" >> /etc/postgresql/12/main/postgresql.conf

# Expose the default PostgreSQL port
EXPOSE 5432

# Start PostgreSQL server when the container launches
CMD ["su", "-", "postgres", "-c", "/usr/lib/postgresql/12/bin/postgres -D /var/lib/postgresql/12/main -c config_file=/etc/postgresql/12/main/postgresql.conf"]
