services:
  # create_embeddings:
  #   volumes:
  #     - /dev/null:/app/.env
  #   build:
  #     context: Create Embeddings
  #     dockerfile: dockerfile
  #   environment:
  #     input: postgres-cdc-source
  #     output: embeddings-sbert-v1
  #     Quix__Broker__Address: kafka-broker:9092
  # ingest_to_qdrant_cloud_vectordb:
  #   volumes:
  #     - /dev/null:/app/.env
  #   build:
  #     context: Ingest to Qdrant Cloud VectorDB
  #     dockerfile: dockerfile
  #   environment:
  #     input: embeddings-sbert-v1
  #     vectordbname: quix-demo
  #     collectionname: books-catalog
  #     qdrant_apikey: update me
  #     Quix__Broker__Address: kafka-broker:9092
  # ingest_to_upstash_vectordb:
  #   volumes:
  #     - /dev/null:/app/.env
  #   build:
  #     context: Ingest to Upstash VectorDB
  #     dockerfile: dockerfile
  #   environment:
  #     input: embeddings-sbert-v1
  #     upstash_vectordb_token: update me
  #     upstash_vectordb_endpoint: https://active-arachnid-42631-eu1-vector.upstash.io
  #     Quix__Broker__Address: kafka-broker:9092
  # pgadmin_database_admin_ui:
  #   volumes:
  #     - /dev/null:/app/.env
  #   build:
  #     context: pgAdmin Database Admin UI
  #     dockerfile: dockerfile
  #   environment:
  #     Quix__Broker__Address: kafka-broker:9092
  # postgresql_cdc:
  #   volumes:
  #     - /dev/null:/app/.env
  #   build:
  #     context: Postgres CDC
  #     dockerfile: dockerfile
  #   environment:
  #     output: postgres-cdc-source
  #     PG_HOST: postgresdb
  #     PG_PORT: 5432
  #     PG_USER: root
  #     PG_DATABASE: test_db
  #     PG_SCHEMA: public
  #     PG_TABLE: products
  #     PG_PASSWORD: root
  #     Quix__Broker__Address: kafka-broker:9092
  
  # test_postgresql_database:
  #   volumes:
  #     - /dev/null:/app/.env
  #   build:
  #     context: Test PostgreSQL Database
  #     dockerfile: dockerfile
  #   environment:
  #     Quix__Broker__Address: kafka-broker:9092

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: test_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  postgres_db_writer:
    build:
      context: ./postgresdb-writer
      dockerfile: dockerfile
    depends_on:
      - postgres
    entrypoint: ["sh", "-c", "sleep 10 && python init_db.py"]

  postgres_db_reader:
    build:
      context: ./postgresdb-reader
      dockerfile: dockerfile
    depends_on:
      - postgres
    entrypoint: ["sh", "-c", "sleep 10 && python read.py"]


  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_storage:/qdrant/storage.

  read_qdrant_service:
    build:
      context: ./qdrant-reader
      dockerfile: dockerfile
    depends_on:
      - qdrant
    entrypoint: ["sh", "-c", "python read.py"]
  
  write_qdrant_service:
    build:
      context: ./qdrant-writer
      dockerfile: dockerfile
    depends_on:
      - qdrant
    entrypoint: ["sh", "-c", "python write.py"]
    
  kafka-broker:
    image: docker.redpanda.com/redpandadata/redpanda:v24.1.1
    command: |
      redpanda start
      --smp 1
      --overprovisioned
      --node-id 0
      --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      --advertise-kafka-addr internal://kafka-broker:9092,external://localhost:19092
      --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      --advertise-pandaproxy-addr internal://kafka-broker:8082,external://localhost:18082
      --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      --rpc-addr kafka-broker:33145
      --advertise-rpc-addr kafka-broker:33145
      --mode dev-container
      --set auto_create_topics_enabled=true
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644
  console:
    image: docker.redpanda.com/redpandadata/console:v2.5.2
    entrypoint: /bin/sh
    command: |-
      -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    ports:
      - 8080:8080
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: >
        kafka:
          brokers: ["kafka-broker:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://kafka-broker:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://kafka-broker:9644"]
        connect:
          enabled: true
          clusters:
            - name: local-connect-cluster
              url: http://connect:8083

volumes:
  postgres_data:
  qdrant_storage: